# Generated by Django 3.0.7 on 2020-11-13 08:44

import django.db.models.deletion
import modelcluster.fields
import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models

import content.blocks


class Migration(migrations.Migration):
    dependencies = [
        ("wagtailimages", "0022_uploadedimage"),
        ("working_at_dit", "0002_auto_20201113_0844"),
        ("content", "0002_auto_20201103_0334"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="theme",
            options={"ordering": ["-title"]},
        ),
        migrations.AlterField(
            model_name="contentpage",
            name="body",
            field=wagtail.fields.StreamField(
                [
                    ("heading2", content.blocks.Heading2Block()),
                    ("heading3", content.blocks.Heading3Block()),
                    (
                        "text_section",
                        content.blocks.TextBlock(
                            blank=True,
                            features=[
                                "bold",
                                "italic",
                                "ol",
                                "ul",
                                "link",
                                "document-link",
                            ],
                            help_text="Some text to describe what this section is about (will be\n            displayed above the list of child pages)",
                        ),
                    ),
                    (
                        "image",
                        wagtail.blocks.StructBlock(
                            [
                                ("image", wagtail.images.blocks.ImageChooserBlock()),
                                (
                                    "isdecorative",
                                    wagtail.blocks.BooleanBlock(
                                        help_text="\n        Tick if this image is entirely decorative and does not include\n        important content. This will hide the image from users using\n        screen readers.\n        ",
                                        label="Is this a decorative image?",
                                        required=False,
                                    ),
                                ),
                                (
                                    "alt",
                                    wagtail.blocks.CharBlock(
                                        help_text="\n        Read out by screen readers or displayed if an image does not load\n        or if images have been switched off.\n\n        Unless this is a decorative image, it MUST have alt text that\n        tells people what information the image provides, describes its\n        content and function, and is specific, meaningful and concise.\n        ",
                                        label="Alt text",
                                        required=False,
                                    ),
                                ),
                                (
                                    "caption",
                                    wagtail.blocks.CharBlock(
                                        help_text="\n        Optional text displayed under the image on the page to provide\n        context.\n        ",
                                        required=False,
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "internal_media",
                        wagtail.blocks.StructBlock(
                            [("media_file", content.blocks.MediaChooserBlock())]
                        ),
                    ),
                    (
                        "video",
                        wagtail.blocks.StructBlock(
                            [("video", wagtail.embeds.blocks.EmbedBlock())],
                            help_text="Video embedding",
                        ),
                    ),
                    (
                        "data_table",
                        content.blocks.DataTableBlock(
                            help_text="ONLY USE THIS FOR TABLULAR DATA, NOT FOR FORMATTING"
                        ),
                    ),
                ]
            ),
        ),
        migrations.CreateModel(
            name="WhatsPopular",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("external_url", models.URLField(blank=True, null=True)),
                (
                    "link_to",
                    modelcluster.fields.ParentalKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whats_popular_pages",
                        to="content.ContentPage",
                    ),
                ),
                (
                    "preview_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.Image",
                    ),
                ),
            ],
            options={
                "ordering": ["-title"],
            },
        ),
        migrations.CreateModel(
            name="QuickLinks",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "link_to",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quick_links_pages",
                        to="content.ContentPage",
                    ),
                ),
            ],
            options={
                "ordering": ["-title"],
            },
        ),
        migrations.CreateModel(
            name="HowDoI",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "how_do_i_page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="how_do_i_on_home_pages",
                        to="working_at_dit.HowDoI",
                    ),
                ),
            ],
        ),
    ]
