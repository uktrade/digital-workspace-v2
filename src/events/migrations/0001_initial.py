# Generated by Django 4.2.15 on 2024-08-23 14:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("content", "0043_contentpage_description"),
        ("peoplefinder", "0121_merge_20240430_0948"),
    ]

    operations = [
        migrations.CreateModel(
            name="EventsHome",
            fields=[
                (
                    "basepage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="content.basepage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("content.basepage",),
        ),
        migrations.CreateModel(
            name="EventPage",
            fields=[
                (
                    "contentpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="content.contentpage",
                    ),
                ),
                (
                    "event_date",
                    models.DateField(
                        help_text="Date and time should be entered based on the time in London/England."
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "submit_questions_url",
                    models.URLField(
                        blank=True,
                        help_text="Link to a page for others to submit their questions.",
                        null=True,
                        verbose_name="Submit questions link",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("in_person", "In person"),
                            ("online", "Online"),
                            ("hybrid", "Hybrid"),
                        ],
                        default="online",
                    ),
                ),
                (
                    "audience",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("all", "All staff"),
                            ("grade_7", "Grade 7 (G7/D6)"),
                            ("grade_6", "Grade 6 (G6/D7)"),
                            ("scs_1", "Senior civil service 1 (SCS1/SMS1)"),
                            ("scs_2", "Senior civil service 2 (SCS2/SMS2)"),
                        ],
                        null=True,
                    ),
                ),
                ("room", models.CharField(blank=True, null=True)),
                ("room_capacity", models.IntegerField(blank=True, null=True)),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="peoplefinder.ukstafflocation",
                    ),
                ),
                (
                    "offline_event_url",
                    models.URLField(
                        blank=True,
                        help_text="If the event is in person, you can add a link here for registration.",
                        null=True,
                        verbose_name="In person registration link",
                    ),
                ),
                (
                    "online_event_url",
                    models.URLField(
                        blank=True,
                        help_text="If the event is online, you can add a link here for others to join.",
                        null=True,
                        verbose_name="Online event link",
                    ),
                ),
                (
                    "event_recording_url",
                    models.URLField(
                        blank=True,
                        help_text="Optional link to a page for others to view the recorded event.",
                        null=True,
                        verbose_name="View event recording link",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("content.contentpage",),
        ),
    ]
