services:

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    volumes:
      - ./setup/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./.db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=digital_workspace
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:buster
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  opensearch:
    image: opensearchproject/opensearch:1.3.7
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-s",
          "-f",
          "http://localhost:9200/_cat/health"
        ]

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:1.3.7
    ports:
      - 5601:5601
    profiles:
      - opensearch
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    depends_on:
      - opensearch

  wagtail:
    env_file: ".env"
    build:
      context: .
      cache_from:
        - digital_workspace/wagtail:latest
    image: digital_workspace/wagtail:latest
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/app/
    ports:
      - "8000:8000"
      - "5678:5678"
    depends_on:
      - db
      - redis
      - opensearch
      - celery
    stdin_open: true
    tty: true
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://127.0.0.1:8000/"
      start_period: 60s
      interval: 60s
      timeout: 10s
      retries: 10

  celery:
    env_file: ".env"
    image: digital_workspace/wagtail:latest
    command: celery -A config.celery worker -l INFO
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "celery inspect ping --destination celery@$$HOSTNAME"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s

  celery-beat:
    env_file: ".env"
    image: digital_workspace/wagtail:latest
    volumes:
      - .:/app
    profiles:
      - celery-beat
    command: poetry run celery -A config.celery beat -l INFO
    depends_on:
      - db
      - redis

  playwright:
    env_file: ".env"
    build:
      context: .
      dockerfile: Dockerfile.test
      cache_from:
        - digital_workspace/playwright:latest
    image: digital_workspace/playwright:latest
    command: tail -F anything # keep running until "down" command
    volumes:
      - ./:/app/
    profiles:
      - playwright
    ipc: host
    depends_on:
      - wagtail
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.test
    links:
      - "wagtail:main"
