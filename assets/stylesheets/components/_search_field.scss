$input-size: 40px;

@function encode-hex($hex) {
    // Turn colour into a string
    $output: inspect($hex);
    // Slice the '#' from the start of the string so we can add it back on encoded.
    $output: str-slice($output, 2);
    // Add the '#' back on the start, but as an encoded character for embedding.
    @return "%23"+$output;
}

.search-form {
    position: relative;
    display: flex;
    flex: 0 $input-size;
    margin: 0;

    input {
        // overly specific to prevent some overrides from outside
        @include govuk-font($size: 16, $line-height: (28 / 16));
        padding: 6px;
        margin: 0;
        //width: 100%;
        height: $input-size;
        background: govuk-colour("white");
        border-radius: 0; //otherwise iphones apply an automatic border radius
        box-sizing: border-box;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;

        // the .focus class is added by JS and ensures that the input remains above the label once clicked/filled in
        &:focus,
        &.focus {
            z-index: 2;
        }

        &:focus {
            outline: $govuk-focus-width solid $govuk-focus-colour;
            // Ensure outline appears outside of the element
            outline-offset: 0;
        }
    }

    button {
        flex-shrink: 0;
        border: 0;
        cursor: pointer;
        border-radius: 0;
        position: relative;
        padding: 0;
        width: $input-size;
        height: $input-size;
        background-color: $brand-color-primary;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 36 36' width='40' height='40'%3E%3Cpath d='M25.7 24.8L21.9 21c.7-1 1.1-2.2 1.1-3.5 0-3.6-2.9-6.5-6.5-6.5S10 13.9 10 17.5s2.9 6.5 6.5 6.5c1.6 0 3-.6 4.1-1.5l3.7 3.7 1.4-1.4zM12 17.5c0-2.5 2-4.5 4.5-4.5s4.5 2 4.5 4.5-2 4.5-4.5 4.5-4.5-2-4.5-4.5z' fill='#{encode-hex(govuk-colour("white"))}'%3E%3C/path%3E%3C/svg%3E");
        background-position: center left;
        background-size: $input-size $input-size;
        background-repeat: no-repeat;

        text-indent: -5000px;
        overflow: hidden;

        &:focus {
            z-index: 2;
            outline: $govuk-focus-width solid $govuk-focus-colour;
            // Ensure outline appears outside of the element
            outline-offset: 0;
        }

        &::-moz-focus-inner {
            border: 0;
        }
    }
}

.site-search {
    position: inherit;
    right: 0;
    top: -4px;
    align-items: center;
    min-width: 260px;

    .search-form {
        button {
            background-color: $govuk-link-colour;
        }
        input {
          border: none;
        }
    }
}

.site-search-mobile {
    .search-form {
        button {
            background-color: $govuk-link-colour;
        }
    }
}

@include govuk-media-query($until: desktop, $media-type: "screen") {
    .site-search {
        display: none;
    }
}


.autocomplete-overlay {
    position: absolute;
    z-index: 100;
    top: 100%;
    left: 0;
    width: 100%;
    background-color: #ffffff;
    box-shadow: rgba(11, 12, 12, 0.256863) 0 2px 6px;
  }

  .profile-image{
    vertical-align:middle;
    padding-top: 3px;
    padding-left: 3px;
    width: 40px;
    height: 40px;
  }

  .autocomplete-choice{
    width: 100%;
    display: block;
    position: relative;
    padding-bottom: 5px;
    padding-top: 5px;
    border-bottom: solid #b1b4b6;
    border-width: 1px 0;
    list-style-type: none;
  }

  .autocomplete-choice a{
    text-decoration: none;
  }

  .autocomplete-text {
    @include govuk-font($size: 16);
    margin-left: 5px;
    padding-left: 5px;
    margin: 0;
    display:block
  }

  .people .autocomplete-text {
    @include govuk-font($size: 16);
    margin-left: 5px;
    padding-left: 5px;
    margin: 0;
    display:inline
  }

  .autocomplete-title {
    @include govuk-font($size: 16, $weight: bold);
    border-top: 2px solid #1d70b8;
    width: 100%;
    padding-top: 5px;
    padding-left: 5px;
    margin: 0;
  }

  .autocomplete-title a:hover{
    text-decoration: underline;
  }

  .autocomplete-choice:hover {
    background-color: govuk-colour("light-grey");
  }

  .autocomplete-choice:hover p{
    text-decoration: underline;
  }