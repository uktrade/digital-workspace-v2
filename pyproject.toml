[tool.poetry]
name = "digital-workspace-v2"
version = "1.0.0"
description = ""
authors = ["Live Services <live.services@digital.trade.gov.uk>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
# Django
django = "^4.2"
django-environ = "^0.10.0"
django-settings-export = "^1.2.1"
# TODO: Set django-simple-history to the next release after 3.4.0 (when released)
django-simple-history = { git = "https://github.com/uktrade/django-simple-history.git", rev = "29108a5" }
django-storages = "^1.13.2"
django-webpack-loader = "^3.0"
djangorestframework = "^3.14.0"
crispy-forms-gds = "^0.2.6"
# DIT Django
django-audit-log-middleware = "^0.0.4"
django-hawk-drf = "^1.1.0"
django-chunk-upload-handlers = "^0.0.14"
django-feedback-govuk = "^0.2.5"
django_log_formatter_ecs = "^0.0.5"
django-staff-sso-client = "^4.2"
notifications-python-client = "^8.2"
# Wagtail
wagtail = "^5.2"
wagtailmedia = "^0.14.2"
wagtailmenus = "^3.1.8"
wagtail-draftail-anchors = "^0.6.0"
wagtail-adminsortable = { git = "https://github.com/uktrade/wagtail-admin-sortable.git", tag = "v0.3.0" }
# OpenSearch
elasticsearch = "<7.14.0"         # highest version for OpenSearch support
elasticsearch-dsl = "^7.4.0"
django-elasticsearch-dsl = "^7.4"
# Peoplefinder
markdown = "^3.5.1"
requests-hawk = "^1.1.1"
# Operational
waitress = "^2.1.2"
sentry-sdk = "^1.20.0"
psycopg2 = "^2.9.6"
whitenoise = "^6.4.0"
celery = "^5.2.7"
redis = "^4.5.4"
tweepy = "^4.13.0"
atoma = "^0.0.17"
bleach = "^6.0.0"
elastic-apm = "^6.15.1"
requests = "^2.28.2"
boto3 = "^1.26.115"
pyjwt = { extras = ["crypto"], version = "^2.6.0" }
django-celery-beat = "^2.5.0"
pillow = "10.0.1"
wagtail-generic-chooser = "^0.6"
dj-database-url = "^2.1.0"
django-waffle = "^4.0.0"
django-log-formatter-asim = "0.0.4"
dbt-copilot-python = "^0.1.3"
aws-xray-sdk = "^2.12.1"
opentelemetry-distro = "^0.43b0"
opentelemetry-exporter-otlp = "^1.22.0"
opentelemetry-instrumentation-wsgi = "^0.43b0"
opentelemetry-propagator-aws-xray = "^1.0.1"
opentelemetry-sdk-extension-aws = "^2.0.1"

[tool.poetry.group.dev.dependencies]
# Linters
black = "^23.3.0"
djlint = "^1.23.2"
ruff = "^0.0.262"
# Testing
pytest = "^7.3.1"
pytest-django = "^4.5.2"
pytest-playwright = "^0.4.3"
coverage = "^7.2.3"
faker = "^18.4.0"
factory-boy = "^3.2.1"
wagtail-factories = "^4.0.0"
# Util
bpython = "^0.24"
django-extensions = "^3.2.1"
werkzeug = "^3.0.1"
blessings = "^1.7"
pytest-mock = "^3.11.1"
pytest-freezer = "^0.4.8"
playwright = "^1.36"
django-silk = "^5.0.4"
snakeviz = "^2.2.0"

[tool.poetry.group.docs.dependencies]
mkdocs-awesome-pages-plugin = "^2.8.0"
mkdocs-material = "^9.1.5"
mkdocs-minify-plugin = "^0.6.4"
mkdocs-redirects = "^1.2.0"
mkdocstrings-python = "^0.9.0"
pillow = "^10.0.1"
cairosvg = "^2.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
python_files = "tests.py test_*.py *_tests.py"
addopts = "--disable-warnings --ds=config.settings.test --base-url http://localhost:8000 --liveserver=0.0.0.0:8000"
DJANGO_SETTINGS_MODULE = "config.settings.test"
markers = [
    "e2e: Mark the test as using Playwright.",
    "opensearch: Mark the test as using OpenSearch.",
]

[tool.coverage.run]
omit = ["*/migrations/*", "*/test/*", "e2e_tests/*"]

[tool.ruff]
extend-select = ["B", "S"]
ignore = ["B904", "E501", "N818", "S101"]
extend-exclude = [
    "manage.py",
    "*/migrations/*",
    "# Not actually Python",
    "node_modules/",
    "assets/",
    "media/",
    "static/",
    "*/test/*",
    ".venv/",
    "bin/",
    "hawk-api-access-test.py",
    ".pythonrc.py",
]

[tool.ruff.isort]
lines-after-imports = 2

[tool.djlint]
extension = "html"
profile = "django"
ignore = "T002,H006,H017,H023"
preserve_blank_lines = true
extend_exclude = "htmlcov,staticfiles,static,node_modules"
